"""initIAL

Revision ID: dfa5aa4c8d1c
Revises: 
Create Date: 2025-07-31 23:00:59.277459

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dfa5aa4c8d1c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marketplace_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('marketplace', sa.Enum('OZON', 'WB', 'YANDEX', name='marketplaceenum'), nullable=False),
    sa.Column('external_id', sa.BIGINT(), nullable=False),
    sa.Column('parent_external_id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('full_path', sa.String(), nullable=True),
    sa.Column('type_id', sa.BIGINT(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ozon_category_id', sa.Integer(), nullable=False),
    sa.Column('wb_category_id', sa.Integer(), nullable=False),
    sa.Column('yandex_category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ozon_category_id'], ['marketplace_categories.id'], ),
    sa.ForeignKeyConstraint(['wb_category_id'], ['marketplace_categories.id'], ),
    sa.ForeignKeyConstraint(['yandex_category_id'], ['marketplace_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('users')
    op.drop_index('ix_brandssynonyms_synonym', table_name='brandssynonyms')
    op.drop_table('brandssynonyms')
    op.drop_table('attributes')
    op.drop_index('ix_nomenclatures_brand_id', table_name='nomenclatures')
    op.drop_index('ix_nomenclatures_ozon_sku', table_name='nomenclatures')
    op.drop_index('ix_nomenclatures_sku', table_name='nomenclatures')
    op.drop_index('ix_nomenclatures_wb_sku', table_name='nomenclatures')
    op.drop_table('nomenclatures')
    op.drop_table('suppliers')
    op.drop_table('media_items')
    op.drop_table('marketplacecategories')
    op.drop_table('prices')
    op.drop_table('media')
    op.drop_table('fitments')
    op.drop_index('ix_brands_name', table_name='brands')
    op.drop_table('brands')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('brands_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id_ozon', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name_ozon', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name_wb', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('brand_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='brands_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_brands_name', 'brands', ['name'], unique=True)
    op.create_table('fitments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('fitments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('make', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('make_translit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('model_translit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year_start', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('year_end', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='fitments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('media',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('media_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('rich_content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('video_thumbnail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('video', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('instruction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='media_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='prices_pkey')
    )
    op.create_table('marketplacecategories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('marketplacecategories_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('wb_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ozon_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('yandex_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='marketplacecategories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('media_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name='media_items_media_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='media_items_pkey')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='suppliers_pkey')
    )
    op.create_table('nomenclatures',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('nomenclatures_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sku_clear', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id_1c', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ozon_sku', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wb_sku', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ozon_update', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('wb_update', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('multiplicity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('activity', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fitment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='nomenclatures_brand_id_fkey'),
    sa.ForeignKeyConstraint(['fitment_id'], ['fitments.id'], name='nomenclatures_fitment_id_fkey'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name='nomenclatures_media_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['marketplacecategories.id'], name='nomenclatures_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='nomenclatures_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_nomenclatures_wb_sku', 'nomenclatures', ['wb_sku'], unique=False)
    op.create_index('ix_nomenclatures_sku', 'nomenclatures', ['sku'], unique=True)
    op.create_index('ix_nomenclatures_ozon_sku', 'nomenclatures', ['ozon_sku'], unique=False)
    op.create_index('ix_nomenclatures_brand_id', 'nomenclatures', ['brand_id'], unique=False)
    op.create_table('attributes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('length', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('width', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('height', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('weight', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('brush_length_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('brush_length_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('brush_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('brush_location', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='attributes_brand_id_fkey'),
    sa.ForeignKeyConstraint(['sku'], ['nomenclatures.sku'], name='attributes_sku_fkey'),
    sa.PrimaryKeyConstraint('id', name='attributes_pkey')
    )
    op.create_table('brandssynonyms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('synonym', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='brandssynonyms_brand_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='brandssynonyms_pkey')
    )
    op.create_index('ix_brandssynonyms_synonym', 'brandssynonyms', ['synonym'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tg_nick', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('categories')
    op.drop_table('marketplace_categories')
    # ### end Alembic commands ###
