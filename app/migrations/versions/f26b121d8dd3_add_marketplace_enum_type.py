"""Add marketplace_enum type

Revision ID: f26b121d8dd3
Revises: d380561dfb97
Create Date: 2025-08-01 20:21:30.459124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f26b121d8dd3'
down_revision: Union[str, None] = 'd380561dfb97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('marketplace_categories', 'parent_external_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_index(op.f('idx_marketplace_external_id'), table_name='marketplace_categories')
    op.create_unique_constraint('uq_marketplace_external_id', 'marketplace_categories', ['marketplace', 'external_id'])
    op.execute("""
        CREATE OR REPLACE FUNCTION update_updated_at_column()
        RETURNS TRIGGER AS $$
        BEGIN
            NEW.updated_at = NOW();
            RETURN NEW;
        END;
        $$ language 'plpgsql';
    """)

    op.execute("""
        CREATE TRIGGER update_updated_at_trigger
        BEFORE UPDATE ON marketplace_categories
        FOR EACH ROW
        EXECUTE PROCEDURE update_updated_at_column();
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_marketplace_external_id', 'marketplace_categories', type_='unique')
    op.create_index(op.f('idx_marketplace_external_id'), 'marketplace_categories', ['marketplace', 'external_id'], unique=True)
    op.alter_column('marketplace_categories', 'parent_external_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    # ### end Alembic commands ###
    op.execute("DROP TRIGGER IF EXISTS update_updated_at_trigger ON marketplace_categories;")
    op.execute("DROP FUNCTION IF EXISTS update_updated_at_column();")